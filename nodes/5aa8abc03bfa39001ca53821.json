{
  "_id": "5aa8abc03bfa39001ca53821",
  "nodeId": "5aa8abbe3bfa39001ca5381f",
  "type": "code:0.0.1:local:32498h32f2",
  "data": {
    "key": "63c8bfa5-289b-4d8b-b8f5-6e8908fd1ac2",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      // INPUT: {\n      //   type: 'request_file_upload:0.0.1:local:00838923flkwne',\n      //   data: {\n      //     fileName: String,\n      //     fileType: String\n      //   }\n      // }\n      \n      \n      try {\n        \n        universe.console.log('Getting SignedUrlNode1');\n        \n        let SignedUrlNode = await universe.loadAndRunCapability('File',{},{\n          type: 'standard_capability_action:0.0.1:local:298j291bs',\n          data: {\n            action: 'signUpload',\n            options: {\n              type: '...',\n              data: INPUT.data\n            }\n          }\n        });\n        \n        \n        universe.console.log('Getting SignedUrlNode2');\n        \n        return resolve({\n          type: 'request_file_upload_response:0.0.1:local:89h91h9f2nsmfd',\n          data: SignedUrlNode.data\n        });\n        \n      }catch(err){\n        console.error('FAILED File.signUpload',err);\n        \n        return resolve({\n          // savedNode\n          type: 'error:..',\n          data: {\n            msg: 'Failed File.signUpload',\n            INPUT,\n            error: true,\n            err: err\n          }\n        });\n        \n      }\n      \n      // try {\n          \n      //   const s3 = new universe.aws.S3();\n      //   const fileName = INPUT.data.fileName;\n      //   const fileType = INPUT.data.fileType;\n      //   const s3Params = {\n      //     Bucket: universe.env.S3_BUCKET,\n      //     Key: fileName,\n      //     Expires: 60,\n      //     ContentType: fileType,\n      //     // ACL: 'public-read'\n      //     ACL: 'private'\n      //   };\n      \n      //   s3.getSignedUrl('putObject', s3Params, (err, data) => {\n      //     if(err){\n      //       universe.console.log('aws error:', err);\n                \n      //       return resolve({\n      //         // savedNode\n      //         type: 'error2:..',\n      //         data: {\n      //           INPUT,\n      //           error: true,\n      //           err: err.toString()\n      //         }\n      //       });\n      //       // return res.end();\n      //     }\n      //     const returnData = {\n      //       signedRequest: data,\n      //       url: `https://${universe.env.S3_BUCKET}.s3.amazonaws.com/${fileName}`\n      //     };\n      //     // res.write(JSON.stringify(returnData));\n      //     // res.end();\n            \n      //     return resolve({\n      //       type: 'request_file_upload_response:0.0.1:local:89h91h9f2nsmfd',\n      //       data: returnData\n      //     });\n          \n      //   });\n        \n        \n      // }catch(err){\n      //   return resolve({\n      //     // savedNode\n      //     type: 'error:..',\n      //     data: {\n      //       INPUT,\n      //       error: true,\n      //       err: err.toString()\n      //     }\n      //   });\n      // }\n      \n      \n      \n    }catch(err){\n      resolve({ERROR: true, err: err});\n    }\n    \n    \n  })\n})()"
  },
  "active": true,
  "createdAt": 1521003456054,
  "updatedAt": null
}